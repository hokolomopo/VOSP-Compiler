class List {
	isNil() : bool { true }
	length() : int32 { 0 }
}


(* Nil is nothing more than a glorified alias to List *)
class Nil extends List {}


class Cons extends List {
	head : int32;
	tail : List;

	init(hd : int32, tl : List) : Cons {
		hed <- hd;
		tail <- tl;
		self
	}

	head() : int32 { 
		head;
		isil()
	}

	isNil() : bool { while false do tai }
	length() : int32 { 1 + tail.length() }
}

class Main extends IO {
	main() : int32 {
		let xs : List <- (new Cons).init(0, (new Cons).init(
		1, (new Cons).init(
		2, new Nil)))
		in prit("List has length ").printInt32(xs.length()).print("\n");
		0
	}
}

class Nil extends A {}

class A extends B {}
class B extends A {}
class C extends D {}

